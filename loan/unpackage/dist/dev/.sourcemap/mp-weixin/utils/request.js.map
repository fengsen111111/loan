{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["import {\n\tbaseUrl\n} from \"./config.js\"\n\nimport crypto from \"crypto-js\"\nimport {\n\tBase64\n} from \"js-base64\"\n\nfunction request(path, data = {}, method = \"POST\") {\n\tlet url = baseUrl + path;\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet {\n\t\t\tfile,\n\t\t\tfileType,\n\t\t\tparams\n\t\t} = data\n\t\tif (fileType === \"file\") {\n\t\t\t// 计算签名。\n\t\t\tfunction computeSignature(accessKeySecret, canonicalString) {\n\t\t\t\treturn crypto.enc.Base64.stringify(crypto.HmacSHA1(canonicalString, accessKeySecret));\n\t\t\t}\n\n\t\t\tconst date = new Date();\n\t\t\tdate.setHours(date.getHours() + 1);\n\t\t\tconst policyText = {\n\t\t\t\texpiration: date.toISOString(), // 设置policy过期时间。\n\t\t\t\tconditions: [\n\t\t\t\t\t// 限制上传大小。\n\t\t\t\t\t[\"content-length-range\", 0, 1024 * 1024 * 1024],\n\t\t\t\t],\n\t\t\t};\n\n\t\t\t//获取OSS配置\n\t\t\tconst credentials = await request(\"/factory_storage/File/refreshSTS\")\n\n\t\t\tconst policy = Base64.encode(JSON.stringify(policyText)) // policy必须为base64的string。\n\t\t\tconst signature = computeSignature(credentials.data.keySecret, policy)\n\t\t\t//获取文件名和服务器存储路径\n\t\t\tconst serverFilePath = \"user/\" + params.fileName\n\t\t\t//获取文件大小\n\t\t\tconst fileSys = uni.getFileSystemManager()\n\t\t\tlet fileSize = params.fileSize\n\t\t\t//上传文件到oss\n\t\t\tconst res = await uni.uploadFile({\n\t\t\t\turl: credentials.data.endpoint,\n\t\t\t\tfilePath: file,\n\t\t\t\tname: \"file\",\n\t\t\t\tformData: {\n\t\t\t\t\tkey: serverFilePath,\n\t\t\t\t\tpolicy,\n\t\t\t\t\tOSSAccessKeyId: credentials.data.keyId,\n\t\t\t\t\tsignature,\n\t\t\t\t\t'x-oss-security-token': credentials.data.token\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet obj = res;\n\t\t\tif (obj.errMsg == 'uploadFile:ok') {\n\t\t\t\t// 返回上传OSS结果\n\t\t\t\tresolve(await request(\"/factory_storage/File/frontUpload\", {\n\t\t\t\t\turl: credentials.data.endpoint + \"/\" + serverFilePath,\n\t\t\t\t\tname: params.fileName,\n\t\t\t\t\tsize: params.fileSize + \"KB\",\n\t\t\t\t\tupload_type: \"oss\",\n\t\t\t\t\tfile_type: \"image\"\n\t\t\t\t}))\n\t\t\t} else {\n\t\t\t\tuni.showToast({\n\t\t\t\t\ttitle: obj.errMsg || '网络是否有点问题',\n\t\t\t\t\tduration: 2000,\n\t\t\t\t\ticon: 'none'\n\t\t\t\t});\n\t\t\t\treject();\n\t\t\t}\n\t\t} else {\n\t\t\tuni.request({\n\t\t\t\turl,\n\t\t\t\tdata: JSON.stringify(data) == \"{}\" ? '' : {\n\t\t\t\t\tpost_params: data\n\t\t\t\t},\n\t\t\t\tmethod,\n\t\t\t\theader: {\n\t\t\t\t\t\"Authorization\": uni.getStorageSync(\"token\") || \"\",\n\t\t\t\t},\n\t\t\t\ttimeout: 6000,\n\t\t\t\tsuccess: (res) => {\n\t\t\t\t\tlet obj = res.data;\n\t\t\t\t\tif (obj.code == 1) {\n\t\t\t\t\t\tresolve(obj)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (obj.code === -1 || obj.code === -2) {\n\t\t\t\t\t\t\tconst appType = uni.getStorageSync(\"appType\");\n\t\t\t\t\t\t\tuni.clearStorageSync();\n\t\t\t\t\t\t\tuni.setStorageSync(\"appType\", appType);\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: \"登录验证失败，请重新登录\",\n\t\t\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t\t\t\ticon: \"none\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tuni.reLaunch({\n\t\t\t\t\t\t\t\t\turl: '/pages/mine/index'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 2200)\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\t\ttitle: obj.message || '网络是否有点问题',\n\t\t\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treject(obj);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfail: res => {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: res.message || '网络是否有点问题',\n\t\t\t\t\t\tduration: 2000,\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treject(res.errMsg)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport default request;"],"names":["baseUrl","crypto","Base64","uni"],"mappings":"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"}